package com.SmartContactManager.smart.entities;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;


@Entity  
@Table(name="USER") // It will create a new table automatically in the database.
public class User {
    
    @Id 
    @GeneratedValue(strategy = GenerationType.AUTO) // id of the user is generated by itself.
     private int id;

    @NotBlank(message = "value required in name field")
    @Size(min=2,max = 20,message = "min 2 and max 20 character are allowed")
    private String name;

    @Column(unique = true)
    @Email(regexp = "^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$")
    @NotBlank(message = "value required in email field")
    // It make the email as unique key .It means we can't put same email in multiple columns. 
    private String email;

    @NotBlank(message = "Fill the password field")
    private String password;

    
    private String role;

    private boolean enabled;

    private String imageurl;

    @Column(length = 500) // it will restrict the length to 500                                 
    private String about;
     
    
    @OneToMany(cascade = CascadeType.ALL ,orphanRemoval = true)
    private List<Contact> contacts = new ArrayList<Contact>();

    

   

    //default constructor
    public User() {  
        super();
    }

    // getter and setters methods

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public String getImageurl() {
        return imageurl;
    }

    public void setImageurl(String imageurl) {
        this.imageurl = imageurl;
    }

    public String getAbout() {
        return about;
    }

    public void setAbout(String about) {
        this.about = about;
    }

    public java.util.List<Contact> getContacts() {
        return contacts;
    }

    
    public void setContacts(java.util.List<Contact> contacts) {
        this.contacts = contacts;
    }

    // @Override
    // public String toString() {
    //     return "User [id=" + id + ", name=" + name + ", email=" + email + ", password=" + password + ", role=" + role
    //             + ", enabled=" + enabled + ", imageurl=" + imageurl + ", about=" + about + ", contacts=" + contacts
    //             + "]";
    // }

    
    




}
